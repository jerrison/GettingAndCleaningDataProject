my_db <- src_sqlite("my_db.sqlite3", create = T)
str(my_db)
my_db
library(nycflights13)
flights_sqlite <- copy_to(my_db, flights, temporary = FALSE, indexes = list(
c("year", "month", "day"), "carrier", "tailnum"))
flights
my_db
flights_sqlite
flights_sqlite <- tbl(nycflights13_sqlite(), "flights")
flights_sqlite
tbl(my_db, sql("SELECT * FROM flights"))
select(flights_sqlite, year:day, dep_delay, arr_delay)
filter(flights_sqlite, dep_delay > 240)
arrange(flights_sqlite, year, month, day)
arrange(flights_sqlite, year, month, DESC(day)
)
arrange(flights_sqlite, year, month, desc(day))
arrange(flights_sqlite, desc(year), month, desc(day))
arrange(flights_sqlite, desc(year), desc(month), desc(day))
set.seed(13435)
X <- data.frame("var1"= sample(1:5), "var2" = sample(6:10), "var3"=sample(11:15))
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA
X
?sampel
?sample
X[X$var2 > 8,]
X[which(X$var2 > 8),]
?which
sort(X$var1, decreasing = TRUE)
X
sort(X$var2)
sort(X$var2, na.last = TRUE)
X[order(X$var1),]
X[order(X$var1, decreasing = TRUE),]
library(plyr)
arrange(X, var1)
arrange(X, desc(var1)
)
X$var4 <- rnorm(5)
X
Y <- cbind(X, rnorm(5))
Y
dir()
getwd("data/")
setwd("data/")
dir()
setwd("..")
restData <- read.csv("./data/restaurants.csv")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv", method = "curl")
restData <- read.csv("./data/restaurants.csv")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv")
restData <- read.csv("./data/restaurants.csv")
library(downloader)
install.packages("downloader")
download(fileUrl, destfile = "./data/restaurants.csv")
library(downloader)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download(fileUrl, destfile = "./data/restaurants.csv")
restData <- read.csv("./data/restaurants.csv")
?downloader
?download
download(fileUrl, destfile = "./data/restaurants.csv", mode = "wb")
library(downloader)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download(fileUrl, destfile = "./data/restaurants.csv", mode = "wb")
restData <- read.csv("./data/restaurants.csv")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(downloader)
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download(fileUrl, destfile = "./data/restaurants.csv", mode = "wb")
restData <- read.csv("./data/restaurants.csv")
head(restData, n = 3)
tail(restData, n =3)
summary(restData)
str(restData)
any(is.na(restData$councilDistrict))
quantile(restData$councilDistrict, na.rm = TRUE)
quantile(restData$councilDistrict)
quantile(restData$councilDistrict, probs = c(0.5, 0.75, 0.9))
table(restData$zipCode, useNA = "ifany")
table(restData$zipCode, useNA = "always")
table(restData$councilDistrict, restData$zipCode)
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212", "21213"))
restData[restData$zipCode %in% c("21212", "21213"),]
data("UCBAdmissions")
DF = as.data.frame(UCBAdmissions)
summary(DF)
head(UCBAdmissions)
UCBAdmissions
xt <- xtabs(Freq ~ Gender + Admit, data = DF)
xt
warpbreaks$replicate <- rep(1:9, len = 54)
warpbreaks
xt = xtabs(breaks ~., data = warpbreaks)
xt
ftable(xt)
restData$nearMe <- restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
restData
restData$zipWrong <- ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong, restData$zipCode < 0)
restData$zipGroups <- cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
talbe(restData$zipGroups, restData$zipCode)
table(restData$zipGroups, restData$zipCode)
? ut
library(Hmisc)
install.packages("Hmisc")
install.packages("Hmisc")
restData$zipGroups <- cut(restData$zipCode, breaks = quantile(restData$zipCode))
table(restData$zipGroups)
# table(restData$zipGroups, restData$zipCode)
library(Hmisc)
restData$zipGroups <- cut2(restData$zipCode, g = 4)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
class(restData$zcf)
yesno <- sample(c("yes", "no"), size = 10, replace = TRUE)
yesnofac <- factor(yesno, levels = c("yes", "no"))
relevel(yesnofac, ref = "yes")
as.numeric(yesnofac)
yesno
library(reshape2)
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars, id = c("carname", "gear", "cyl"), measure.vars =
c("mpg", "hp"))
head(carMelt, n = 3)
tail(carMelt, n = 3)
carMelt
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable, mean)
cylData
head(InsectSprays)
tapply(InsectSprays$count, InsectSprays$spray, sum)
spINs <- split(InsectSprays$count, InsectSprays$spray)
spIns
source('~/.active-rstudio-document', echo=TRUE)
sprCount <- lapply(spIns, sum)
sprCount
library(downloader)
if(!file.exists("./data")){dir.create("./data")}
fileUrl1 = "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 = "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download(fileUrl1,destfile="./data/reviews.csv")
download(fileUrl2,destfile="./data/solutions.csv")
reviews = read.csv("./data/reviews.csv")
solutions <- read.csv("./data/solutions.csv")
head(reviews,2)
head(reviews,2)
head(solutions,2)
mergedData <- merge(reviews, solutions, by.x = "solution_id", by.y = "id", all =
TRUE)
head(mergedData)
getwd
getwd()
setwd("..")
getwd()
setwd("GitHub/Coursera/Getting and Cleaning Data/Week1/")
dir.create("Week3")
dir()
setwd("..")
dir()
dir.create("Week3")
setwd("Week3/")
getwd()
setwd("H:/Documents/GitHub/Coursera/Getting and Cleaning Data/Week3")
library(downloader)
fileUrl1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download(fileUrl1, destfile = "housing.csv")
housing <- read.csv("housing.csv")
head(housing)
names(housing)
str(housing)
housing
summary(housing)
agricultureLogical <- housing[housing$ACR == 3 & housing$AGS == 6]
housing$ACR == 3 & housing$AGS == 6
housing[955,]
agricultureLogical <- (housing$ACR == 3 & housing$AGS == 6)
which(agricultureLogical == TRUE)
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download(fileUrl2, destfile = "image.jpg")
library("jpeg")
install.packages("jpeg")
library("jpeg")
image <- readJPEG("image.jpg")
image <- readJPEG("getdata_jeff.jpg")
image
head(image)
image <- readJPEG("getdata_jeff.jpg", native = TRUE)
names(image)
resulting_quantiles <- quantile(image, probs = c(0.3, 0.8))
resulting_quantiles
source('H:/Documents/GitHub/Coursera/Getting and Cleaning Data/Week3/QuizScript.R', echo=TRUE)
setwd("H:/Documents/GitHub/Coursera/Getting and Cleaning Data/Week3")
fileUrl3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download(fileUrl3, destfile = "Country_GDP.csv")
download(fileUrl4, destfile = "Country_education.csv")
country_GDP <- read.csv("Country_GDP.csv")
country_education <- read.csv("Country_education.csv")
head(country_GDP)
fix(country_GDP)
country_education <- read.csv("Country_education.csv")
head(country_education)
fix(country_education)
country_GDP <- read.csv("Country_GDP.csv", skip = 2)
country_education <- read.csv("Country_education.csv")
head(country_GDP)
fix(country_GDP)
country_GDP <- read.csv("Country_GDP.csv", skip = 4)
country_education <- read.csv("Country_education.csv")
fix(country_GDP)
country_1 <- read.csv("Country_GDP.csv")
fix(country_1)
head(country_1)
names(country_GDP)
fix(country_GDP)
fix(country_1)
country_GDP <- read.csv("Country_GDP.csv", skip = 4, nrows = 231)
names(country_GDP) <- c("Country_code", "GDP_ranking", "", "Country_name",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
head(country_GDP)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", skip = 4, nrows = 231)
names(country_GDP) <- c("Country_code", "GDP_ranking", "Country_name",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
country_GDP
head(country_GDP)
fix(country_GDP)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", skip = 4, nrows = 231)
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
fix(country_GDP)
head(country_education)
fix(country_education)
fix(country_education)
mergedData <- merge(country_GDP, country_education, by.x = "Country_Code",
by.y = "CountryCode")
names(country_GDP)
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
head(mergedData)
fix(mergedData)
dim(country_GDP)
dim(country_education)
fix(mergedData)
fix(country1)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", skip = 4, nrows = 231)
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
fix(country1())
fix(country1
)
country_1
fix(country_1)
fix(country_education)
fix(mergedData)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv")
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
fix(mergedData)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv")
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
fix(mergedData)
source('H:/Documents/GitHub/Coursera/Getting and Cleaning Data/Week3/QuizScript.R', echo=TRUE)
sortedMergedData <- order(mergedData, desc(mergedData$GDP_dollars))
sort(mergedData$GDP_dollars)
sort(as.numeric(mergedData$GDP_dollars))
mergedData$GDP_ranking
sort(mergedData$GDP_ranking)
mergedData[sort(mergedData$GDP_ranking),]
mergedData
mergedData[,1]
fix(country_GDP)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", nrow = 194)
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
dim(mergedData)
sortedMergedData <- mergedData[order(mergedData$GDP_ranking),]
sortedMergedData
sortedMergedData[,1]
names(sortedMergedData)
sortedMergedData[,1:6]
sortedMergedData <- mergedData[order(desc(mergedData$GDP_ranking)),]
sortedMergedData[,1:6]
sortedMergedData[1:20,1:6]
fix(country_GDP)
str(sortedMergedData)
library(dplyr)
arrange(mergedData, GDP_rank)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", nrow = 194, stringsAsFactors = FALSE)
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
sortedMergedData <- mergedData[order(desc(mergedData$GDP_ranking)),]
sortedMergedData[1:20,1:6]
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", nrow = 194, stringsAsFactors = FALSE)
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
sortedMergedData <- mergedData[order(desc(mergedData$GDP_ranking)),]
sortedMergedData[1:20,1:6]
str(sortedMergedData)
as.numeric(sortedMergedData$GDP_ranking)
country_1 <- read.csv("Country_GDP.csv")
country_GDP <- read.csv("Country_GDP.csv", nrow = 194, stringsAsFactors = FALSE)
names(country_GDP) <- c("Country_code", "GDP_ranking", "",
"Economy", "GDP_dollars")
country_education <- read.csv("Country_education.csv")
mergedData <- merge(country_GDP, country_education, by.x = "Country_code",
by.y = "CountryCode")
sortedMergedData <- mergedData[order(desc(as.numeric(mergedData$GDP_ranking)),]
sortedMergedData <- mergedData[order(desc(as.numeric(mergedData$GDP_ranking))),]
sortedMergedData[1:20,1:6]
sortedMergedData[13,1:6]
dim(sortedMergedData)
fix(country_1)
fix(country_education)
fix(mergedData)
str(mergedData)
GDPdata <- mergedData[, c("Country_code")]
GDPdata
GDPdata <- mergedData[, c("Country_code", as.numeric("GDP_rank"))]
fix(GDPdata)
GDPdata <- mergedData[, c("Country_code", as.numeric("GDP_rank"))]
GDPdata
GDPdata <- mergedData[, c("Country_code", as.numeric("GDP_ranking"))]
GDPdata
GDPdata <- mergedData[, c("Country_code", "GDP_ranking")]
str(GDPdata)
str(mergedData)
GDPdata <- mergedData[, c("Country_code", "GDP_ranking", "Income.Group")]
str(GDPdata)
GDPdata <- mutate(GDPdata, GDP_ranking_numeric = as.numeric(GDP_ranking))
GDPdata
str(GDPdata)
tapply(GDPdata$GDP_ranking_numeric, GDPdata$Income.Group, mean)
GDPrankingQuantiles <- cut(GDPdata$GDP_ranking_numeric, breaks =
quantile(GDPdata$GDP_ranking_numeric))
GDPrankingQuantiles
GDPrankingQuantiles <- cut(GDPdata$GDP_ranking_numeric, breaks =
quantile())
GDPrankingQuantiles <- cut(GDPdata$GDP_ranking_numeric, breaks =
quantile(GDPdata$GDP_ranking_numeric, probs =
c(0, 0.25, 0.5, 0.75, 1.0)))
GDPrankingQuantiles
GDPrankingQuantiles <- cut(GDPdata$GDP_ranking_numeric, breaks =
quantile(GDPdata$GDP_ranking_numeric, probs =
c(0, 0.2, 0.4, 0.6, 0.8, 1.0)))
GDPrankingQuantiles
table(GDPdata$Income.Group, GDPrankingQuantiles)
swirl()
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarise(mean(size))
summarise(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum$count, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
getwd()
setwd("..")
getwd()
setwd("..")
getwd()
setwd("..")
getwd()
dir()
setwd("GettingAndCleaningDataProject/")
getwd()
dir()
setwd("UCI HAR Dataset/")
dir()
setwd("..")
dir()
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt")
activity_labels
c("activity_id", "activity_label"))
activity_labels <- read.table("UCI HAR Dataset/activity_labels.txt", col.names =
c("activity_id", "activity_label"))
activity_labels
dir("UCI HAR Dataset/")
features <- read.table("UCI HAR Dataset/features.txt")
features
head(features)
dir("UCI HAR Dataset/")
features <- read.table("UCI HAR Dataset/features.txt", col.names =
c("feature_id", "feature_label"))
head(features)
dir("UCI HAR Dataset/")
features_info <- read.table("UCI HAR Dataset/features_info.txt")
head(features_info)
features_info <- read.table("UCI HAR Dataset/features_info.txt", skip = 1)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")
head(subject_test)
library(dplyr)
subject_test
head(subject_test)
dim(subject_test)
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names =
c("subject_id"))
head(subject_test)
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
dim(X_test)
head(X_test)
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", header = TRUE)
head(X_test)
X_test <- read.table("UCI HAR Dataset/test/X_test.txt")
dir()
dir("UCI HAR Dataset/test/")
y_test <- read.table("UCI HAR Dataset/test/y_test.txt")
dim(y_test)
dim(X_test)
head(y_test)
head(features)
dim(features)
dir("UCI HAR Dataset/test/")
subject_test
dim(y_test)
y_test
str(y_test)
summarise(y_test)
summary(y_test)
dim(X_test)
features
dim(features)
X_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names =
features$feature_label)
head(X_test)
head(X_test[1:5])
head(features)
tail(X_test[1:5])
tail(features)
tail(X_test[556:561])
subject_test
dim(X_test)
dim(subject_test)
subject_test
summary(subject_test)
y_test
features
